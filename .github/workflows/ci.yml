name: CI

on:
  pull_request:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-24.04

    steps:
      # Setup
      - name: Show versions
        run: |
          rustc --version
          cargo --version
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2

      # Execute
      - name: Format check
        id: format
        continue-on-error: true
        run: cargo fmt --check --message-format=short
      - name: Lint
        id: lint
        continue-on-error: true
        run: cargo clippy

      - name: Setup nextest
        run: |
          curl -LsSf https://get.nexte.st/latest/linux | tar zxf - -C ${CARGO_HOME:-~/.cargo}/bin
      - name: test
        run: |
          cargo nextest run
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: junit test reports
          path: target/nextest/default

      # Post process
      - name: Set status failure when format or lint step failed
        if: steps.format.outcome != 'success' || steps.lint.outcome != 'success'
        run: exit 1

  build:
    permissions:
      id-token: write
      contents: read
      attestations: write
    strategy:
      fail-fast: false
      matrix:
        job:
          - os: ubuntu-24.04
            target: x86_64-unknown-linux-gnu
            bin: junit2json
          - os: ubuntu-24.04
            target: wasm32-wasi
            bin: junit2json.wasm
          - os: macos-15
            target: x86_64-apple-darwin
            bin: junit2json
          - os: macos-15
            target: aarch64-apple-darwin
            bin: junit2json
    name: Build ${{ matrix.job.target }}
    runs-on: ${{ matrix.job.os }}
    steps:
      - name: Show versions
        run: |
          rustc --version
          cargo --version
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
      - name: Setup rust build target
        run: rustup target add ${{ matrix.job.target }}

      - name: Build
        run: |
          if [[ "${{ matrix.job.target }}" == "wasm32-wasi" ]]; then
            cargo install cargo-wasi
            cargo wasi build --release --target ${{ matrix.job.target }}
          else
            cargo build --release --target ${{ matrix.job.target }}
          fi

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.job.target }}
          path: target/${{ matrix.job.target }}/release/${{ matrix.job.bin }}
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-path: target/${{ matrix.job.target }}/release/${{ matrix.job.bin }}


  actions-timeline:
    needs: [test, build]
    runs-on: ubuntu-24.04
    steps:
      - uses: Kesin11/actions-timeline@v2
